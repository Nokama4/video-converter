{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/carine/Desktop/video-converter/app/root.tsx", "/Users/carine/Desktop/video-converter/app/routes/index.tsx", "../app/components/Nav.tsx", "../app/components/List/data.ts", "../app/components/List/index.tsx", "../app/models/videos.server.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nimport createCache from '@emotion/cache';\nimport { CacheProvider } from '@emotion/react';\nimport createEmotionServer from '@emotion/server/create-instance';\n\nconst key = 'custom';\nconst cache = createCache({ key });\nconst {\n  extractCriticalToChunks,\n  constructStyleTagsFromChunks,\n} = createEmotionServer(cache);\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n\n  let markup = renderToString(\n    <CacheProvider value={cache}>\n      <RemixServer context={remixContext} url={request.url} />\n    </CacheProvider>\n  );\n\n  const chunks = extractCriticalToChunks(markup);\n  const styles = constructStyleTagsFromChunks(chunks);\n\n  markup = markup.replace('__STYLES__', styles);\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport 'video.js/dist/video-js.css'\nimport type { LinksFunction } from \"@remix-run/node\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport const links: LinksFunction = () => {\n  return [\n    {\n      rel: \"stylesheet\",\n      href: \"https://unpkg.com/modern-css-reset@1.4.0/dist/reset.min.css\",\n    },\n  ];\n};\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n        {typeof document === \"undefined\"\n          ? \"__STYLES__\"\n          : null}\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import styled from '@emotion/styled';\nimport 'video.js/dist/video-js.css'\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\n\n\nimport Nav from '~/components/Nav';\nimport List from '~/components/List';\nimport { getVideos } from \"~/models/videos.server\";\n\nconst MyStyledH1 = styled.h1`\n  font-size: 5rem;\n  color: green;\n`;\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  console.log(params, \"noteId not found\");\n\n  const note = await getVideos();\n  if (!note) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  return json({ note });\n};\n\nexport default function Index() {\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.4\" }}>\n      <Nav />\n      <List />\n    </div>\n  );\n}\n", "import { Link } from \"@remix-run/react\";\nimport styled from '@emotion/styled';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport { padding } from \"@mui/system\";\n\nconst Container = styled.div({\n  borderBottom: '1px solid gray',\n  padding: '1em'\n});\n\nconst Nav = () => {\n  const activeStyle = {\n    textDecoration: \"underline\",\n  };\n\n  return (\n    <Container>\n      <Stack spacing={2} direction=\"row\">\n        <Button variant=\"contained\">Upload video</Button>\n      </Stack>\n    </Container>\n  );\n}\n\nexport default Nav", "export const videos = [\n  { id: 1, title: 'Video 1', description: 'Description 1', url: 'https://www.youtube.com/embed/1' },\n  { id: 2, title: 'Video 2', description: 'Description 2', url: 'https://www.youtube.com/embed/2' },\n  { id: 3, title: 'Video 3', description: 'Description 3', url: 'https://www.youtube.com/embed/3' },\n  { id: 4, title: 'Video 4', description: 'Description 4', url: 'https://www.youtube.com/embed/4' },\n  { id: 5, title: 'Video 5', description: 'Description 5', url: 'https://www.youtube.com/embed/5' },\n]", "\nimport { videos } from './data'\n\nconst List = () => {\n  return (\n    <div>\n      <h1>List</h1>\n      <div>\n        {videos.map(video => (\n          <div key={video.id}>\n            <h2>{video.title}</h2>\n            <p>{video.description}</p>\n            </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default List;", "import AWS from 'aws-sdk';\nimport { v1 as uuidv1 } from 'uuid';\n\nexport const getVideos = async () => {\n  console.log(process.env);\n  \n  AWS.config.update({\n    region: 'eu-west-3',\n    accessKeyId: process.env.ACCESS_KEY_ID,\n    secretAccessKey: process.env.SECRET_ACCESS_KEY,\n  })\n\n  const dynamoDb = new AWS.DynamoDB.DocumentClient();\n  const params = {\n    TableName: 'videos',\n  };\n\n  dynamoDb.scan(params, (err, data) => {\n    if (err) {\n      console.log(err)\n      return null;\n    } else {\n        const { Items } = data;\n         return {\n          videos: Items\n        };\n    }\n});\n}\n\nexport const addVideo = async (req, res) => {\n  AWS.config.update({\n    region: 'eu-west-3',\n    accessKeyId: process.env.ACCESS_KEY_ID,\n    secretAccessKey: process.env.SECRET_ACCESS_KEY,\n  })\n  const docClient = new AWS.DynamoDB.DocumentClient();\n  const Item = { ...req.body };\n  Item.id = uuidv1();\n  var params = {\n      TableName: 'videos',\n      Item: Item\n  };\n\n  // Call DynamoDB to add the item to the table\n  docClient.put(params, function (err, data) {\n      if (err) {\n          res.send({\n              success: false,\n              message: err\n          });\n      } else {\n          res.send({\n              success: true,\n              message: 'Added movie',\n              video: data\n          });\n      }\n  });\n}", "export default {'version':'0aabf0e1','entry':{'module':'/build/entry.client-EEGA4PEK.js','imports':['/build/_shared/chunk-OOOT6WWT.js','/build/_shared/chunk-2MLTBGTY.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-GG4ZGEWS.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-NWHFNPZL.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-0AABF0E1.js'};", "\nimport * as entryServer from \"/Users/carine/Desktop/video-converter/app/entry.server.tsx\";\nimport * as route0 from \"/Users/carine/Desktop/video-converter/app/root.tsx\";\nimport * as route1 from \"/Users/carine/Desktop/video-converter/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": []
}
