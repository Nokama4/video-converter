{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/carine/Desktop/video-converter/app/root.tsx", "/Users/carine/Desktop/video-converter/app/routes/index.tsx", "../app/components/Nav.tsx", "../app/components/display/Upload.tsx", "../app/components/List/index.tsx", "../app/models/videos.server.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction, LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport styles from \"./styles/tailwind.css\";\n\nexport const links: LinksFunction = () => [\n  { rel: \"stylesheet\", href: styles },\n];\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import 'video.js/dist/video-js.css'\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\n\nimport Nav from '~/components/Nav';\nimport List from '~/components/List';\nimport { getVideos } from \"~/models/videos.server\";\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  const videos = await getVideos();\n  if (!videos) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n\n  console.log(videos);\n  \n  return json(videos);\n};\n\nexport default function Index() {\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.4\" }}>\n      <Nav />\n      <List videos={useLoaderData()} />\n    </div>\n  );\n}\n", "import { useState } from 'react';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport TextField from '@mui/material/TextField';\n\nimport Upload from './display/Upload';\n\nconst style = {\n  position: 'absolute' as 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n  display: 'flex',\n  flexDirection: 'column',\n};\n\nconst Nav = () => {\n  const [open, setOpen] = useState(false);\n  const [asset, setAsset] = useState<File | null>(null);\n  const [title, setTitle] = useState('');\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  const onChangeAsset = async (evt) => {\n    const file = evt?.target?.files?.[0]\n\n    if (!file) return setAsset(null)\n    setAsset(file)\n  }\n\n\n  return (\n    <div className='p-4 border-b-1 border-black'>\n      <Stack spacing={2} direction=\"row\">\n        <Button variant=\"contained\" onClick={handleOpen}>Upload video</Button>\n        <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Create a new video\n          </Typography>\n          <Upload\n            sublabel='Add video to upload to S3'\n            onChange={onChangeAsset}\n            value={asset}\n            maxSize={52000000000}\n          />\n\n          <TextField\n            id=\"outlined-name\"\n            color=\"primary\"\n            label=\"Title\"\n            value={title}\n            onChange={handleChange}\n          />\n\n          <Button>Submit</Button>\n        </Box>\n      </Modal>\n      </Stack>\n    </div>\n  );\n}\n\nexport default Nav", "import { useState, useMemo } from 'react'\n\nconst TYPES = {\n  'image/png': 'image',\n  'image/jpeg': 'image',\n  'image/jpg': 'image',\n  'image/webp': 'image',\n  'image/gif': 'image',\n  'video/mp4': 'video',\n  'video/quicktime': 'video',\n  'video/mov': 'video'\n}\n\nexport default function FileUpload(props) {\n  const {\n    value,\n    onChange,\n    label,\n    sublabel,\n    maxSize = 40000000,\n    acceptTypes = 'image/*,.mp4,.mov',\n    description = 'PNG, GIF, WEBP or MP4.',\n    isMultiple = false,\n    hasPreview = true\n  } = props\n\n  const [sizeReached, setSizeReached] = useState(false)\n\n  const [id] = useState(Math.random().toString(36))\n\n  const onFileChange = (e) => {\n    const file = e?.target?.files ? e.target.files[0] : null\n    if (file && maxSize && file.size >= maxSize) {\n      return setSizeReached(true)\n    }\n    setSizeReached(false)\n    onChange(e)\n  }\n\n  const assetPreview = (asset) => {\n    if (!asset) return null\n    const type = TYPES[asset?.type] || 'image'\n    const previewClass = 'w-full max-w-max\tborder-black rounded border flex-grow max-h-96'\n\n    return type === 'image' ? (\n      <img src={asset && URL.createObjectURL(asset)} alt='preview-unlockable' className={previewClass} />\n    ) : (\n      <video autoPlay muted loop playsInline src={asset && URL.createObjectURL(asset)} className={previewClass}></video>\n    )\n  }\n\n  const preview = useMemo(() => {\n    return assetPreview(value)\n  }, [value])\n\n  const isGb = maxSize && maxSize >= 1000000000\n\n  return (\n    <div className={`my-4 w-full flex flex-col`}>\n      <div className='mb-2'>{label}</div>\n      {!preview && sublabel && <div className='text-gtxt text-sm mb-4'>{sublabel}</div>}\n\n      {hasPreview && (\n        <>\n          {preview || (\n            <label\n              htmlFor={id}\n              className='w-full h-40 rounded bg-g text-gtxt flex-grow flex flex-col items-center justify-center cursor-pointer '\n            >\n              <img src='/images/upload.svg' alt='file-upload-icon' />\n              {`${description} Max ${new Intl.NumberFormat('en-US', {\n                style: 'unit',\n                unit: isGb ? 'gigabyte' : 'megabyte',\n                maximumSignificantDigits: isGb ? 2 : 1,\n                unitDisplay: 'short'\n              }).format(maxSize / (isGb ? 1000000000 : 1000000))}`}\n            </label>\n          )}\n          {preview && (\n            <p className='mt-4 text-sm text-primary hover:underline' onClick={onChange}>\n              Remove\n            </p>\n          )}\n        </>\n      )}\n\n      <input\n        type='file'\n        name='file'\n        multiple={isMultiple}\n        id={id}\n        onChange={onFileChange}\n        className='hidden'\n        accept={acceptTypes}\n      />\n\n      {sizeReached && (\n        <p className='text-red mt-2'>\n          File size must be maximum of{' '}\n          {new Intl.NumberFormat('en-US', {\n            style: 'unit',\n            unit: isGb ? 'gigabyte' : 'megabyte',\n            maximumSignificantDigits: isGb ? 2 : 1,\n            unitDisplay: 'short'\n          }).format(maxSize / (isGb ? 1000000000 : 1000000))}\n        </p>\n      )}\n    </div>\n  )\n}\n", "\n// import { videos } from './data'\n\nconst List = ({ videos }) => {\n  return (\n    <div>\n      <h1>List</h1>\n      <div>\n        {videos.map(video => (\n          <div key={video.id}>\n            <h2>{video.title}</h2>\n            </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default List;", "import AWS from 'aws-sdk';\nimport { v1 as uuidv1 } from 'uuid';\nrequire('dotenv').config()\n\nAWS.config.update({\n  region: 'eu-west-3',\n  accessKeyId: process.env.ACCESS_KEY_ID,\n  secretAccessKey: process.env.SECRET_ACCESS_KEY,\n})\n\nconst documentClient = new AWS.DynamoDB.DocumentClient();\n\nexport const getVideos = async () => {\n  const params = {\n    TableName: 'basicVideoTable',\n  };\n\n  let data = await documentClient.scan(params).promise();    \n  const { Items } = data;\n  \n  return Items;\n}\n\nexport const addVideo = async (req, res) => {\n  AWS.config.update({\n    region: 'eu-west-3',\n    accessKeyId: process.env.ACCESS_KEY_ID,\n    secretAccessKey: process.env.SECRET_ACCESS_KEY,\n  })\n  const docClient = new AWS.DynamoDB.DocumentClient();\n  const Item = { ...req.body };\n  Item.id = uuidv1();\n  var params = {\n      TableName: 'basicVideoTable',\n      Item: Item\n  };\n\n  // Call DynamoDB to add the item to the table\n  docClient.put(params, function (err, data) {\n      if (err) {\n          res.send({\n              success: false,\n              message: err\n          });\n      } else {\n          res.send({\n              success: true,\n              message: 'Added movie',\n              video: data\n          });\n      }\n  });\n}", "export default {'version':'c19f1954','entry':{'module':'/build/entry.client-Q757RDEH.js','imports':['/build/_shared/chunk-62B463J7.js','/build/_shared/chunk-7IY5YADK.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-NF6QUQWI.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-GRRRGMCK.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-C19F1954.js'};", "\nimport * as entryServer from \"/Users/carine/Desktop/video-converter/app/entry.server.tsx\";\nimport * as route0 from \"/Users/carine/Desktop/video-converter/app/root.tsx\";\nimport * as route1 from \"/Users/carine/Desktop/video-converter/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": []
}
